#
# Copyright 2015 The CHOReVOLUTION project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

choreography.bounds.error.message=None BPMN2 Choreography founded in the BPMN2 Model. The BPMN2 must have one or more BPMN2 Choreography

default.choreography.id=Choreography_1
default.choreography.name=Default Choreography
default.choreography.error.message=None default Choreography found in the BPMN2 Model

# Start Event rules
start.event.bounds.error.message=The Choreography "{0}" Event must have one BPMN2 Start Event, instead of "{1}"
start.event.incoming.flows.bounds.error.message=The BPMN2 Start Event "{0}" must have zero incoming Sequence Flows, instead of "{1}"
start.event.outgoing.flows.bounds.error.message=The BPMN2 Start Event "{0}" must have one outgoing Sequence Flows, instead  of "{1}"

# End Event rules
end.event.bounds.error.message=The Choreography "{0}" Event must have one or more BPMN2 End Event, instead of "{1}"
end.event.incoming.flows.bounds.error.message=The BPMN2 Event Event "{0}" must have one incoming Sequence Flows, instead of "{1}"
end.event.outgoing.flows.bounds.error.message=The BPMN2 Event Event "{0}" must have zero outgoing Sequence Flows, instead of "{1}"

# Gateway rules
gateway.direction.error.message=The BPMN2 Gateway "{0}" should be either Converging or Diverging

diverging.gateway.incoming.flows.bounds.error.message=The BPMN2 Diverging Gateway "{0}" must have one incoming Sequence Flows, instead of "{1}"
diverging.gateway.outgoing.flows.bounds.error.message=The BPMN2 Diverging Gateway "{0}" must have one or more outgoing Sequence Flows, instead of "{1}"

converging.gateway.incoming.flows.bounds.error.message=The BPMN2 Converging Gateway "{0}" must have one or more incoming Sequence Flows, instead of "{1}"
converging.gateway.outgoing.flows.bounds.error.message=The BPMN2 Converging Gateway "{0}" must have one outgoing Sequence Flows, instead of "{1}"

# The Gateway controls the flow of both diverging and converging Sequence Flows.
# That is, a single Gateway could have multiple input and multiple output flows.
# Modelers and modeling tools might want to enforce a best practice of a Gateway
# only performing one of these functions. Thus, it would take two sequential Gateways
# to first converge and then to diverge the Sequence Flows

# Choreography Activity rules
choreography.activity.incoming.flows.bounds.error.message=The BPMN2 Choreography Activity "{0}" must have one or more incoming Sequence Flows, instead of "{1}"
choreography.activity.outgoing.flows.bounds.error.message=The BPMN2 Choreography Activity "{0}" must have one outgoing Sequence Flows, instead of "{1}"

# Used to detect CallChoreography or SubChoreography
call.choreography.activity.not.has.choreography.association.error.message=The BPMN2 not contains a BPMN2 Choreography named "{0}" to use for mapping the BPMN2 CallChoreography Activity "{1}"
sub.choreography.activity.not.has.choreography.association.error.message=The BPMN2 not contains a BPMN2 Choreography named "{0}" to use for mapping the BPMN2 SubChoreography Activity "{1}"

# Choreography Activity Participant rules
choreography.activity.participant.bounds.error.message=The BPMN2 Choreography Activity "{0}" must have two or more Participants, instead of "{1}"

# Choreography Activity Flow rules
choreography.activity.flow.error.message=The BPMN2 Choreography Activity "{0}" must follow flowing rule: his initiating participant "{1}" must be involved in the previous Activity "{2}"

# Choreography Task messages number rules
choreography.task.message.number.bounds.error.message=The BPMN2 Choreography Task "{0}" must have 1 to 2 Messages, instead of "{1}"

# Choreography Task initiating message number rules
choreography.task.initiating.message.number.error.message=The BPMN2 Choreography Task "{0}" Must have an initiating message

# Exclusive Gateway Participant Validation
exclusive.gateway.participant.validation.error.message=The Initiating Participant(s) of the Choreography next to the Gateway "{0}" must be present in the Choreography Activity "{1}" prior to the Gateway; these participants are missing: "{2}"

# Exclusive Gateway Must Have condition
exclusive.gateway.condition.validation.error.message=The Outgoing Element {1} of the Gateway "{0}" must have a Condition

# Event Based Gateway Participant Validation
event.based.gateway.participant.validation.error.message=On the Gateway "{0}" exit side Senders must be the same OR Receivers must be the same

# Inclusive Gateway Participant Validation
inclusive.gateway.participant.validation.error.message=The initiators of choreography activities following the gateway "{0}" must be senders or receivers in the choreography activities immediatly preceding the gateway

# Inclusive SPLIT Gateway Participant Validation
inclusive.split.gateway.participant.validation.error.message=The Gateway "{0}" is Split Type: The initiators of all the choreography activity immediatly following the gateway "{0}" must be the same as common SENDER or common RECEIVER of the choreography activity preceding the gateway. The senders of all the choreography activity following the gateway must be present in all the choreography activity immediatly preceding the gateway

# Parallel Gateway Participant Validation
parallel.gateway.participant.validation.error.message=The initiators of choreography activities following the gateway "{0}" must be senders or receivers in the Choreography Activity "{1}" immediatly preceding the gateway "{0}"; these participants are missing: "{2}"

# Message type not declared in XSD
message.type.not.present.in.xsd.error.message=The message "{0}" of choreography "{1}" within the choreography task "{2}" with initiating participant "{3}" and receiving participant "{4}" has a Data-Type that is not declared in the XSD file: "{5}"

# XSD File not well-formed
xSD.file.not.well.formed.error.message=The XSD file associated with choreography is not well-formed, the error is the string: "{0}"

# Type doesn't exists, an xsd needed
type.not.exist.error.message=The message "{0}" of choreography "{1}" within the choreography task "{2}" with initiating participant "{3}" and receiving participant "{4}" has a Data-Type that not exists: "{5}"

# Message type not defined
message.type.not.defined.error.message=The message "{0}" of choreography "{1}" within the choreography task "{2}" with initiating participant "{3}" and receiving participant "{4}" has no Data-Type defined

# Subchor not the same participants as declared
subchoreography.participant.missing.error.message=The Participants inside the BPMN2 SubChoreography "{0}" must be the same as declared: "{1}"; Participants found inside the SubChoreography: "{2}"

# Subchor not the same participants as declared
callchoreography.participant.missing.error.message=The Participants inside the BPMN2 CallChoreography "{0}" must be the same as declared: "{1}"; Participants found inside the CallChoreography: "{2}"

# Participant messages of different types
participant.message.type.error.message=The message "{0}" of choreography "{1}" within the choreography task "{2}" with initiating participant "{3}" and receiving participant "{4}" has the data type named "{5}" but it is expected to be "{6}"